version: '2.2'
services:
  nginx:
    image: nginx:latest
    depends_on:
      - app
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './uwsgi_params:/etc/nginx/uwsgi_params'
      - 'staticdata:/static'
    ports:
      - '80:80'

  mysql:
    image: mysql:5.7
    hostname: mysql
    restart: always
    environment:
      MYSQL_DATABASE: askcos_db
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - 'mysql_data:/var/lib/mysql'
    expose:
      - '3306'

  mongo:
    image: mongo
    hostname: mongo
    restart: always
    env_file:
      - .env

  mongoseed:
    build: ./mongo
    env_file:
      - .env
    depends_on:
      - mongo

  app:
    image: askcos
    hostname: app
    restart: always
    env_file:
      - .env
      - customization
    command: bash -c "uwsgi --socket :8000 --master --processes=4 --wsgi-file /usr/local/ASKCOS/askcos/wsgi.py"
    expose:
      - '8000'
    volumes:
      - 'staticdata:/usr/local/ASKCOS/askcos/askcos_site/static'
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  te_coordinator:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q te_coordinator -n te_coordinator@%h"
    depends_on:
      - redis
      - rabbit

  sc_coordinator:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q sc_coordinator -n sc_coordinator@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  ft_worker:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q ft_worker -n ft_worker@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  cr_coordinator:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q cr_coordinator -n cr_coordinator@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  cr_network_worker:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q cr_network_worker -n cr_network_worker@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  tb_coordinator_mcts:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 2 -Q tb_coordinator_mcts -n tb_coordinator_mcts@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  tb_c_worker:
    image: askcos
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A askcos_site worker -c 10 -Q tb_c_worker -n tb_c_worker@%h"
    depends_on:
      - redis
      - rabbit
      - mysql
      - mongo

  redis:
    image: redis
    hostname: redis
    restart: always
    expose:
      - '6379'
    volumes:
      - 'redisdata:/data'

  rabbit:
    image: rabbitmq
    hostname: rabbit
    restart: always
    expose:
      - '5672'

volumes:
  redisdata:
  mysql_data:
  staticdata:
