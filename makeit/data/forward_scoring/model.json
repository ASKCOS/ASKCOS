{"class_name": "Model", "keras_version": "1.1.0", "config": {"layers": [{"class_name": "InputLayer", "config": {"batch_input_shape": [null, null, null, 43], "input_dtype": "float32", "sparse": false, "name": "H_lost"}, "inbound_nodes": [], "name": "H_lost"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, null, null, 43], "input_dtype": "float32", "sparse": false, "name": "H_gain"}, "inbound_nodes": [], "name": "H_gain"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, null, null, 90], "input_dtype": "float32", "sparse": false, "name": "bond_lost"}, "inbound_nodes": [], "name": "bond_lost"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, null, null, 90], "input_dtype": "float32", "sparse": false, "name": "bond_gain"}, "inbound_nodes": [], "name": "bond_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>R\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_H_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>S\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["H_lost", 0, 0]]], "name": "flatten_H_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>R\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_H_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>S\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["H_gain", 0, 0]]], "name": "flatten_H_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>R\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_bond_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>S\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["bond_lost", 0, 0]]], "name": "flatten_bond_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000sG\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000|\u0000\u0000j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000j\u0002\u0000d\u0002\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0003\u0000\u0019\u0014|\u0000\u0000j\u0002\u0000d\u0004\u0000\u0019f\u0002\u0000d\u0005\u0000|\u0000\u0000j\u0003\u0000d\u0003\u0000\u0018\u0083\u0002\u0001S(\u0006\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>R\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "flatten_bond_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000d\u0002\u0000|\u0000\u0000d\u0001\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0003\u0000\u0000\u0000(\u0001\u0000\u0000\u0000N(\u0001\u0000\u0000\u0000t\u0004\u0000\u0000\u0000None(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>S\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["bond_gain", 0, 0]]], "name": "flatten_bond_gain"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_lost 1", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["flatten_H_lost", 0, 0]]], "name": "embed H_lost 1"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_gain 1", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["flatten_H_gain", 0, 0]]], "name": "embed H_gain 1"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_lost 1", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["flatten_bond_lost", 0, 0]]], "name": "embed bond_lost 1"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_gain 1", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["flatten_bond_gain", 0, 0]]], "name": "embed bond_gain 1"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_lost 2", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed H_lost 1", 0, 0]]], "name": "embed H_lost 2"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_gain 2", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed H_gain 1", 0, 0]]], "name": "embed H_gain 2"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_lost 2", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed bond_lost 1", 0, 0]]], "name": "embed bond_lost 2"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_gain 2", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed bond_gain 1", 0, 0]]], "name": "embed bond_gain 2"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_lost 3", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed H_lost 2", 0, 0]]], "name": "embed H_lost 3"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed H_gain 3", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed H_gain 2", 0, 0]]], "name": "embed H_gain 3"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_lost 3", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed bond_lost 2", 0, 0]]], "name": "embed bond_lost 3"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "embed bond_gain 3", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["embed bond_gain 2", 0, 0]]], "name": "embed bond_gain 3"}, {"class_name": "Merge", "config": {"name": "expand H_lost edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>|\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>}\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed H_lost 3", 0, 0], ["H_lost", 0, 0]]], "name": "expand H_lost edits"}, {"class_name": "Merge", "config": {"name": "expand H_gain edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>|\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>}\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed H_gain 3", 0, 0], ["H_gain", 0, 0]]], "name": "expand H_gain edits"}, {"class_name": "Merge", "config": {"name": "expand bond_lost edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>|\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>}\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed bond_lost 3", 0, 0], ["bond_lost", 0, 0]]], "name": "expand bond_lost edits"}, {"class_name": "Merge", "config": {"name": "expand bond_gain edits", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0007\u0000\u0000\u0000S\u0000\u0001\u0000s]\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0003\u0000\u0019|\u0000\u0000d\u0001\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019f\u0004\u0000d\u0004\u0000|\u0000\u0000d\u0001\u0000\u0019j\u0003\u0000d\u0003\u0000\u0017\u0083\u0002\u0001S(\u0005\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000t\u0004\u0000\u0000\u0000ndim(\u0004\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Tt\u0007\u0000\u0000\u0000reshapet\u0005\u0000\u0000\u0000shapeR\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>|\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0018\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000 |\u0000\u0000d\u0003\u0000\u0019d\u0001\u0000\u001f\u0017S(\u0004\u0000\u0000\u0000Ni\u0001\u0000\u0000\u0000i\u0003\u0000\u0000\u0000i\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>}\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["embed bond_gain 3", 0, 0], ["bond_gain", 0, 0]]], "name": "expand bond_gain edits"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0085\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum H_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0086\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand H_lost edits", 0, 0]]], "name": "sum H_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0085\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum H_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0086\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand H_gain edits", 0, 0]]], "name": "sum H_gain"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0085\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum bond_lost", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0086\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand bond_lost edits", 0, 0]]], "name": "sum bond_lost"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u0013\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000\u0083\u0001\u0001S(\u0003\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u0002\u0000\u0000\u0000(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0085\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum bond_gain", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s\u0010\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 |\u0000\u0000d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000i\u0003\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0086\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["expand bond_gain edits", 0, 0]]], "name": "sum bond_gain"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, 256], "input_dtype": "float32", "sparse": false, "name": "reagent FP"}, "inbound_nodes": [], "name": "reagent FP"}, {"class_name": "Merge", "config": {"name": "concat across edits", "concat_axis": -1, "mode_type": "raw", "dot_axes": -1, "mode": "concat", "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["sum H_lost", 0, 0], ["sum H_gain", 0, 0], ["sum bond_lost", 0, 0], ["sum bond_gain", 0, 0]]], "name": "concat across edits"}, {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "reagent fingerprint to features", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}, "inbound_nodes": [[["reagent FP", 0, 0]]], "name": "reagent fingerprint to features"}, {"class_name": "TimeDistributed", "config": {"layer": {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "dense_1", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "tanh", "output_dim": 200}}, "trainable": true, "name": "reaction embedding post-sum"}, "inbound_nodes": [[["concat across edits", 0, 0]]], "name": "reaction embedding post-sum"}, {"class_name": "Merge", "config": {"name": "broadcast reagent vector", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u001f\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019\u0083\u0002\u0000S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0003\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0006\u0000\u0000\u0000repeatt\u0005\u0000\u0000\u0000shape(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0097\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s&\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019d\u0002\u0000\u0019f\u0002\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0098\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["reagent fingerprint to features", 0, 0], ["H_lost", 0, 0]]], "name": "broadcast reagent vector"}, {"class_name": "Merge", "config": {"name": "multiply reaction with reagents [dot 1/2]", "concat_axis": -1, "mode_type": "raw", "dot_axes": -1, "mode": "mul", "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["reaction embedding post-sum", 0, 0], ["broadcast reagent vector", 0, 0]]], "name": "multiply reaction with reagents [dot 1/2]"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, 6], "input_dtype": "float32", "sparse": false, "name": "solvent descriptors c,e,s,a,b,v"}, "inbound_nodes": [], "name": "solvent descriptors c,e,s,a,b,v"}, {"class_name": "InputLayer", "config": {"batch_input_shape": [null, 1], "input_dtype": "float32", "sparse": false, "name": "temperature [C]"}, "inbound_nodes": [], "name": "temperature [C]"}, {"class_name": "TimeDistributed", "config": {"layer": {"class_name": "Dense", "config": {"W_constraint": null, "b_constraint": null, "name": "dense_2", "activity_regularizer": null, "trainable": true, "init": "glorot_uniform", "bias": true, "input_dim": null, "b_regularizer": null, "W_regularizer": {"l2": 0.0, "name": "WeightRegularizer", "l1": 0.0}, "activation": "linear", "output_dim": 8}}, "trainable": true, "name": "features to K,G0,C,E,S,A,B,V"}, "inbound_nodes": [[["reaction embedding post-sum", 0, 0]]], "name": "features to K,G0,C,E,S,A,B,V"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0006\u0000\u0000\u0000S\u0000\u0001\u0000s\u0019\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000d\u0002\u0000d\u0003\u0000t\u0002\u0000\u0083\u0001\u0002S(\u0004\u0000\u0000\u0000Nt\u0004\u0000\u0000\u0000axisi\u00ff\u00ff\u00ff\u00fft\b\u0000\u0000\u0000keepdims(\u0003\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sumt\u0004\u0000\u0000\u0000True(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u009f\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "sum reaction with reagents [dot 2/2]", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0001\u0000s\f\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 d\u0003\u0000\u0017S(\u0004\u0000\u0000\u0000Ni\u00ff\u00ff\u00ff\u00ffi\u0001\u0000\u0000\u0000(\u0001\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u009f\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["multiply reaction with reagents [dot 1/2]", 0, 0]]], "name": "sum reaction with reagents [dot 2/2]"}, {"class_name": "Merge", "config": {"name": "broadcast solvent vector", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u001f\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019\u0083\u0002\u0000S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0003\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0006\u0000\u0000\u0000repeatt\u0005\u0000\u0000\u0000shape(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0097\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s&\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019d\u0002\u0000\u0019f\u0002\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0098\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["solvent descriptors c,e,s,a,b,v", 0, 0], ["H_lost", 0, 0]]], "name": "broadcast solvent vector"}, {"class_name": "Merge", "config": {"name": "broadcast temperature", "concat_axis": -1, "mode_type": "lambda", "dot_axes": -1, "mode": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000S\u0000\u0001\u0000s\u001f\u0000\u0000\u0000t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019j\u0002\u0000d\u0002\u0000\u0019\u0083\u0002\u0000S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0003\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0006\u0000\u0000\u0000repeatt\u0005\u0000\u0000\u0000shape(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0097\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0003\u0000\u0000\u0000S\u0000\u0001\u0000s&\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0001\u0000\u0019|\u0000\u0000d\u0002\u0000\u0019d\u0002\u0000\u0019f\u0002\u0000|\u0000\u0000d\u0001\u0000\u0019d\u0002\u0000\u001f\u0017S(\u0003\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u0098\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["temperature [C]", 0, 0], ["H_lost", 0, 0]]], "name": "broadcast temperature"}, {"class_name": "Merge", "config": {"name": "concatenate context", "concat_axis": -1, "mode_type": "raw", "dot_axes": -1, "mode": "concat", "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["features to K,G0,C,E,S,A,B,V", 0, 0], ["sum reaction with reagents [dot 2/2]", 0, 0], ["broadcast solvent vector", 0, 0], ["broadcast temperature", 0, 0]]], "name": "concatenate context"}, {"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000\u0013\u0000\u0001\u0000s\u00d5\u0000\u0000\u0000|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0001\u0000f\u0003\u0000\u0019\u0088\u0000\u0000|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0002\u0000f\u0003\u0000\u0019t\u0000\u0000j\u0001\u0000|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0003\u0000d\u0004\u0000\u0085\u0002\u0000f\u0003\u0000\u0019|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0005\u0000d\u0006\u0000\u0085\u0002\u0000f\u0003\u0000\u0019\u0014d\u0007\u0000d\b\u0000\u0083\u0001\u0001\u0017\u0014|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0006\u0000f\u0003\u0000\u0019d\t\u0000\u0017\u0015\u0018\u0088\u0001\u0000|\u0000\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0000\u0000d\u0000\u0000\u0085\u0002\u0000d\u0004\u0000f\u0003\u0000\u0019\u0014\u0017S(\n\u0000\u0000\u0000Ni\u0000\u0000\u0000\u0000i\u0001\u0000\u0000\u0000i\u0002\u0000\u0000\u0000i\b\u0000\u0000\u0000i\t\u0000\u0000\u0000i\u000f\u0000\u0000\u0000t\u0004\u0000\u0000\u0000axisi\u00ff\u00ff\u00ff\u00ffgfffff\u0012q@(\u0002\u0000\u0000\u0000t\u0001\u0000\u0000\u0000Kt\u0003\u0000\u0000\u0000sum(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0002\u0000\u0000\u0000t\u000e\u0000\u0000\u0000context_weightt\u0012\u0000\u0000\u0000enhancement_weight(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u00b1\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, [50.0, 0.1]], "name": "propensity = logK - (G0 + cC + eE + ... + vV) / T + enh.", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0001\u0000s\b\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000 S(\u0002\u0000\u0000\u0000Ni\u0002\u0000\u0000\u0000(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s?\u0000\u0000\u0000makeit/predict/reaxys_score_candidates_from_edits_compact_v2.pyt\b\u0000\u0000\u0000<lambda>\u00b2\u0000\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "output_shape_type": "lambda"}, "inbound_nodes": [[["concatenate context", 0, 0]]], "name": "propensity = logK - (G0 + cC + eE + ... + vV) / T + enh."}, {"class_name": "Activation", "config": {"activation": "softmax", "trainable": true, "name": "scores to probs"}, "inbound_nodes": [[["propensity = logK - (G0 + cC + eE + ... + vV) / T + enh.", 0, 0]]], "name": "scores to probs"}], "input_layers": [["H_lost", 0, 0], ["H_gain", 0, 0], ["bond_lost", 0, 0], ["bond_gain", 0, 0], ["reagent FP", 0, 0], ["solvent descriptors c,e,s,a,b,v", 0, 0], ["temperature [C]", 0, 0]], "output_layers": [["scores to probs", 0, 0]], "name": "model_1"}}